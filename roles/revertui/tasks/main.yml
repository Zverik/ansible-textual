---
- name: Check out RevertUI
  git:
    repo: https://github.com/Zverik/RevertUI
    dest: "{{ sites }}/osmz.ru/revert"
    recursive: true
  notify: restart revertui

- name: Upload config
  template:
    src: config_local.py
    dest: "{{ sites }}/osmz.ru/revert/revertui/config_local.py"
  notify: restart revertui

- name: Create virtualenv for revertui
  pip:
    requirements: "{{ sites }}/osmz.ru/revert/requirements.txt"
    virtualenv: "{{ sites }}/osmz.ru/revert/.venv"

- name: Create apache log directory
  become: yes
  file:
    path: "/var/log/apache2/{{ domain }}"
    state: directory
    mode: 0775
    owner: zverik
    group: www-data

- name: Create systemd service
  become: yes
  template:
    src: revertui.service
    dest: /etc/systemd/system/
  notify: drestart revertui

- name: Enable and start revertui systemd module
  become: yes
  systemd:
    name: revertui
    enabled: yes
    daemon_reload: true
    state: started

- name: Add revert_job to cron
  cron:
    name: revertui job
    job: "cd {{ sites }}/osmz.ru/revert && .venv/bin/python -m revertui.revert_job >> /var/log/apache2/{{domain}}/revert.log 2>&1"

- name: Remove stale lock files with cron
  cron:
    name: revertui stale lock
    job: "find {{ sites }}/osmz.ru/revert/revertui -maxdepth 1 -type f -name lock -cmin +120 -delete"

- name: Add revertui to backup
  become: yes
  cron:
    name: backup revertui
    minute: 0
    hour: 4
    job: /root/make_backup RevertUI "{{ sites }}/osmz.ru/revert/revertui/revertui.db"

- name: Restore revertui
  when: "'restore' in ansible_run_tags"
  become: yes
  command:
    argv:
      - "/root/extract_backup"
      - RevertUI
      - '*'
    chdir: /

- name: Ensure http_proxy is enabled
  become: yes
  apache2_module:
    name: proxy_http
    state: present

- name: Check that the certificate exists
  become: yes
  stat:
    path: "{{ cert_path.revert }}/privkey.pem"
  register: revert_cert

- name: Add apache domain
  become: yes
  template:
    src: domain.j2
    dest: /etc/apache2/sites-available/{{ domain }}.conf
  notify: reload apache

- name: Enable apache domain
  become: yes
  file:
    src: /etc/apache2/sites-available/{{ domain }}.conf
    dest: /etc/apache2/sites-enabled/{{ domain }}.conf
    state: link
  notify: reload apache
