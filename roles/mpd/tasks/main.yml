---
- name: Create virtualenv for mpd
  pip:
    virtualenv: "{{ sites }}/osmz.ru/mpd"
    name: git+https://github.com/Zverik/mapping_pie_dispenser
    state: latest
  notify: restart mpd

- name: Create var directory
  file:
    path: "{{ mpd_instance }}"
    state: directory

- name: Upload config
  template:
    src: config.j2
    dest: "{{ mpd_instance }}/config.py"
  notify: restart mpd

- name: Check for db
  stat:
    path: "{{ mpd_instance }}/mpd.sqlite"
  register: mpd_db

- name: Initialise the db
  when: not mpd_db.stat.exists
  command:
    chdir: "{{ sites }}/osmz.ru/mpd"
    argv:
      - bin/flask
      - --app
      - mpd
      - initdb

- name: Create apache log directory
  become: yes
  file:
    path: "/var/log/apache2/{{ domain }}"
    state: directory
    mode: 0775
    owner: zverik
    group: www-data

- name: Create systemd service
  become: yes
  template:
    src: mpd.service.j2
    dest: /etc/systemd/system/mpd.service
  notify: restart mpd

- name: Enable and start mpd systemd module
  become: yes
  systemd:
    name: mpd
    enabled: yes
    daemon_reload: true
    state: started

- name: Add mpd to backup
  become: yes
  lineinfile:
    path: /etc/cron.daily/backup
    line: /root/make_backup MPD "{{ mpd_instance }}/mpd.sqlite"
    regexp: 'make.* MPD '
    state: present
  tags: backup

- name: Restore osmstreak
  when: "'restore' in ansible_run_tags"
  become: yes
  command:
    argv:
      - "/root/extract_backup"
      - MPD
      - '*'
    chdir: /

- name: Ensure http_proxy is enabled
  become: yes
  apache2_module:
    name: proxy_http
    state: present

- name: Check that the certificate exists
  become: yes
  stat:
    path: "{{ cert_path.mpd }}/privkey.pem"
  register: mpd_cert

- name: Add apache domain
  become: yes
  template:
    src: domain.j2
    dest: /etc/apache2/sites-available/{{ domain }}.conf
  notify: reload apache

- name: Enable apache domain
  become: yes
  file:
    src: /etc/apache2/sites-available/{{ domain }}.conf
    dest: /etc/apache2/sites-enabled/{{ domain }}.conf
    state: link
  notify: reload apache
